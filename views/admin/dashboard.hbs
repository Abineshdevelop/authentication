<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Admin Dashboard</title>

  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <style>
    body {
      background: #0f0f0f;
      color: #f1f1f1;
      font-family: 'Segoe UI', sans-serif;
    }

    .navbar {
      background: rgba(0, 188, 212, 0.08);
      backdrop-filter: blur(10px);
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .navbar-brand {
      color: #00bcd4 !important;
      font-weight: bold;
    }

    .btn-logout {
      border: 1px solid #00bcd4;
      color: #00bcd4;
      background-color: transparent;
    }

    .btn-logout:hover {
      background-color: #00bcd4;
      color: #000;
    }

    .glass-card {
      background: rgba(255, 255, 255, 0.05);
      backdrop-filter: blur(12px);
      border-radius: 16px;
      padding: 20px;
    }

    .btn-success {
      background-color: #00bcd4;
      color: #000;
      border-color: #00bcd4;
    }

    .btn-success:hover {
      background-color: #00acc1;
    }

    .search-bar input {
      background: rgb(114, 114, 114);
      color: #fff;
      border: 1px solid rgba(0, 188, 212, 0.5);
    }

    .table thead {
      background-color: rgba(0, 188, 212, 0.1);
    }
  </style>
</head>

<body>
  <!-- bavbar -->
  <nav class="navbar navbar-expand-lg px-4 py-2">
    <a class="navbar-brand">{{adminName}}</a>
    <div class="ms-auto">
      <form action="/admin/logout" method="POST">
        <button type="submit" class="btn btn-logout">Logout</button>
      </form>
    </div>
  </nav>

  <!-- main content -->
  <div class="container mt-5">
    <div class="glass-card">
      <h2 class="mb-4">Manage Users</h2>

      <!-- search and create -->
      <div class="d-flex justify-content-between mb-4 flex-wrap gap-2">
<form action="/admin/search" method="GET" class="search-bar w-100 w-md-auto">
  <input type="text" name="q" class="form-control" placeholder="Search by name or email" />
</form>

        <button class="btn btn-success" data-bs-toggle="modal" data-bs-target="#createModal">
          <i class="bi bi-person-plus-fill"></i> Create User
        </button>
      </div>

      <!-- usr table -->
      <div class="table-responsive">
        <table class="table table-dark table-striped table-hover">
          <thead>
            <tr>
              <th>#</th>
              <th>Name</th>
              <th>Email</th>
              <th>Created At</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            {{#each users}}
            <tr>
              <td>{{@index}}</td>
              <td>{{this.name}}</td>
              <td>{{this.email}}</td>
              <td>{{this.createdAt}}</td>
              <td>
                <button class="btn btn-warning btn-sm" data-bs-toggle="modal" data-bs-target="#editModal"
                  data-id="{{this._id}}" data-name="{{this.name}}" data-email="{{this.email}}">
                  Edit
                </button>
                <button class="btn btn-danger btn-sm" onclick="confirmDelete('{{this._id}}')">
  Delete
</button>

              </td>
            </tr>
            {{/each}}
          </tbody>
        </table>
      </div>
    </div>
  </div>

  <!-- Edit Modal -->
  <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <form id="editForm" method="POST">
        <div class="modal-content bg-dark text-white">
          <div class="modal-header border-0">
            <h5 class="modal-title" id="editModalLabel">Edit User</h5>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body">
            <input type="hidden" name="id" id="userId">
            <div class="mb-3">
              <label for="userName" class="form-label">Name</label>
              <input type="text" class="form-control" name="name" id="userName">
            </div>
            <div class="mb-3">
              <label for="userEmail" class="form-label">Email</label>
              <input type="email" class="form-control" name="email" id="userEmail">
            </div>
          </div>
          <div class="modal-footer border-0">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-success">Update</button>
          </div>
        </div>
      </form>
    </div>
  </div>

  <!-- create -->
  <div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="createModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <form id="createForm" method="POST" action="/admin/create-user">
        <div class="modal-content bg-dark text-white">
          <div class="modal-header border-0">
            <h5 class="modal-title">Create New User</h5>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body">
            <div class="mb-3">
              <label for="newUserName" class="form-label">Name</label>
              <input type="text" class="form-control" id="newUserName" name="name" required>
            </div>
            <div class="mb-3">
              <label for="newUserEmail" class="form-label">Email</label>
              <input type="email" class="form-control" id="newUserEmail" name="email" required>
            </div>
            <div class="mb-3">
              <label for="newUserPassword" class="form-label">Password</label>
              <input type="password" class="form-control" id="newUserPassword" name="password" required>
            </div>
          </div>
          <div class="modal-footer border-0">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            <button type="submit" class="btn btn-success">Create</button>
          </div>
        </div>
      </form>
    </div>
  </div>

 <script>
  const createForm = document.getElementById('createForm');

  createForm.addEventListener('submit', async function (e) {
    console.log("creater form")
    e.preventDefault();

    const name = document.getElementById('newUserName').value.trim();
    const email = document.getElementById('newUserEmail').value.trim();
    const password = document.getElementById('newUserPassword').value.trim();
console.log("pafjoesuafn")
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?#&]).{8,}$/;

    if (!name || !email || !emailRegex.test(email) || !passwordRegex.test(password)) {
      Swal.fire({
        icon: "error",
        title: "Validation Error",
        text: "Fill in valid name, email, and strong password.",
        background: '#1a1a1a',
        color: '#f1f1f1',
        iconColor: '#00bcd4',
        confirmButtonColor: '#00bcd4'
      });
      return;
    }

    createForm.submit()

  });
</script>

<script>
    const message='{{message}}'
    if(message && message.length > 0){
 Swal.fire({
      icon: 'success',
      title: 'Success',
      text: message,
      timer: 2000,
      showConfirmButton: false,
      background: '#1f1f1f',
      color: '#f1f1f1',
      iconColor: '#00bcd4'
    });
    }
   
</script>
<script>
  const editModal = document.getElementById('editModal');
  editModal.addEventListener('show.bs.modal', function (event) {
    const button = event.relatedTarget;
    const id = button.getAttribute('data-id');
    const name = button.getAttribute('data-name');
    const email = button.getAttribute('data-email');

    const form = document.getElementById('editForm');
    form.action = `/admin/edit-user/${id}`;
    document.getElementById('userId').value = id;
    document.getElementById('userName').value = name;
    document.getElementById('userEmail').value = email;
  });
</script>
<script>
  const editForm = document.getElementById('editForm');
  editForm.addEventListener('submit', function (e) {
    e.preventDefault();

    const userName = document.getElementById('userName').value.trim();
    const userEmail = document.getElementById('userEmail').value.trim();

    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

    if (!userName || !emailRegex.test(userEmail)) {
      Swal.fire({
        icon: 'error',
        title: 'Validation Error',
        text: 'Please enter a valid name and email address.',
        background: '#1a1a1a',
        color: '#f1f1f1',
        iconColor: '#00bcd4',
        confirmButtonColor: '#00bcd4',
        confirmButtonText: 'Okay',
        customClass: {
          popup: 'rounded-4 shadow-lg',
          title: 'fw-bold',
          confirmButton: 'px-4 py-2'
        }
      });
      return false;
    }

    this.submit();
  });
</script>


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  function confirmDelete(userId) {
    Swal.fire({
      title: "Are you sure?",
      text: "You won't be able to revert this!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#6c757d",
      confirmButtonText: "Yes, delete it!"
    }).then((result) => {
      if (result.isConfirmed) {
        window.location.href = `/admin/delete-user/${userId}?deleted=true`;
      }
    });
  }

  const urlParams = new URLSearchParams(window.location.search);
  if (urlParams.get('deleted') === 'true') {
    Swal.fire({
      icon: "success",
      title: "Deleted!",
      text: "User has been deleted successfully.",
      showConfirmButton: false,
      timer: 2000
    });

    window.history.replaceState({}, document.title, window.location.pathname);
  }
</script>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</body>

</html>